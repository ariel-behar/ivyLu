{"version":3,"file":"static/js/171.e1308f04.chunk.js","mappings":"wOAYMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAY,oKACV,YAAO,SAALE,MAAiBC,QAAQC,KAAKC,KAAK,IAG/C,YAAO,SAALH,MAAiBC,QAAQC,KAAKE,KAAK,IA8DhD,WAAeC,EAAAA,EAAAA,IAnDf,WACC,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAE1B,SAAqBC,GACpB,GAAY,eAATA,EACF,OAAO,EACD,GAAY,sBAATA,EACT,OAAO,EACF,GAAY,4BAATA,EACR,OAAO,EACF,GAAY,uBAATA,EACR,OAAO,CAET,CAZmCC,CAAYJ,EAASK,WAAU,eAA3DC,EAAK,KAAEC,EAAQ,KAkBtB,OACC,SAAC,IAAG,CAACC,GAAI,EAAGC,GAAI,CAAEC,SAAU,EAAGC,WAAY,6FAA8F,UACxI,UAAC,IAAS,YAGT,SAAC,IAAG,CAACF,GAAI,CAAEG,MAAO,QAAS,UAC1B,SAAC,IAAG,CAACH,GAAI,CAAEI,aAAc,EAAGC,YAAa,WAAY,UACpD,UAACvB,EAAU,CACVwB,kBAAmB,CAAEC,MAAO,CAAEC,gBAAiB,YAC/CX,MAAOA,EACPY,SAde,SAACC,EAA6BC,GAClDb,EAASa,EACV,EAaMC,QAAQ,aACRC,eAAa,EACbC,0BAAwB,aAExB,SAAC,IAAG,CAACC,UAAU,MAAMC,MAAM,YAAYnB,MAAO,EAAGoB,UAAWC,EAAAA,GAAeC,GAAG,uBAC9E,SAAC,IAAG,CAACJ,UAAU,MAAMC,MAAM,kBAAkBnB,MAAO,EAAGoB,UAAWC,EAAAA,GAAeC,GAAG,6BACpF,SAAC,IAAG,CAACJ,UAAU,MAAMC,MAAM,UAAUnB,MAAO,EAAGoB,UAAWC,EAAAA,GAAeC,GAAG,+BAK/E,SAAC,IAAG,CAACnB,GAAI,CAAEoB,EAAG,GAAI,UACjB,SAAC,KAAM,UAMZ,G","sources":["views/AuthorizedViews/DashboardView/DashboardView.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { NavLink as RouterNavLink, Outlet, useLocation } from \"react-router-dom\";\r\n\r\nimport { isAuthRouteGuard } from \"../../../hoc/isAuthRouteGuard\";\r\n\r\nimport styled from \"@mui/material/styles/styled\";\r\n\r\nimport Box from \"@mui/material/Box\"\r\nimport Container from \"@mui/material/Container\"\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\n\r\nconst StyledTabs = styled(Tabs)`\r\n\tbackground-color: ${({theme}) => theme.palette.main.beige};\r\n\r\n\t& a.Mui-selected { \r\n\t\tcolor: ${({theme}) => theme.palette.main.black};\r\n\t}\r\n\r\n\t.tab {\r\n\t\t&.active { \r\n\t\t\tfont-weight: bold \r\n\t\t}\r\n\t}\r\n`\r\n\r\n\r\nfunction DashboardView() {\r\n\tconst location = useLocation()\r\n\tconst [value, setValue] = useState(getTabValue(location.pathname));\r\n\r\n\tfunction getTabValue(path: string){\r\n\t\tif(path === '/dashboard'){\r\n\t\t\treturn 0;\r\n\t\t} else if(path === '/dashboard/orders'){\r\n\t\t\treturn 0;\r\n\t\t}else if(path === '/dashboard/appointments'){\r\n\t\t\treturn 1;\r\n\t\t}else if(path === '/dashboard/profile'){\r\n\t\t\treturn 2;\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleChange = (event: React.SyntheticEvent, newValue: number) => {\r\n\t\tsetValue(newValue);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Box py={3} sx={{ flexGrow: 1, background: \"url('https://ivy-lu.s3.eu-central-1.amazonaws.com/patterns/light-background-pattern.jpg')\" }}>\r\n\t\t\t<Container>\r\n\t\t\t\t{/* <div>DashboardView</div> */}\r\n\r\n\t\t\t\t<Box sx={{ width: '100%' }}>\r\n\t\t\t\t\t<Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n\t\t\t\t\t\t<StyledTabs\r\n\t\t\t\t\t\t\tTabIndicatorProps={{ style: { backgroundColor: \"#2c2c2c\" } }}\r\n\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tvariant=\"scrollable\"\r\n\t\t\t\t\t\t\tscrollButtons\r\n\t\t\t\t\t\t\tallowScrollButtonsMobile\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Tab className=\"tab\" label=\"My Orders\" value={0} component={RouterNavLink} to='/dashboard/orders' />\r\n\t\t\t\t\t\t\t<Tab className=\"tab\" label=\"My Appointments\" value={1} component={RouterNavLink} to='/dashboard/appointments' />\r\n\t\t\t\t\t\t\t<Tab className=\"tab\" label=\"Profile\" value={2} component={RouterNavLink} to='/dashboard/profile' />\r\n\t\t\t\t\t\t</StyledTabs>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t\t<Box sx={{ p: 3 }}>\r\n\t\t\t\t\t<Outlet />\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t</Container>\r\n\t\t</Box>\r\n\t)\r\n}\r\n\r\nexport default isAuthRouteGuard(DashboardView)\r\n\r\n"],"names":["StyledTabs","styled","Tabs","theme","palette","main","beige","black","isAuthRouteGuard","location","useLocation","useState","path","getTabValue","pathname","value","setValue","py","sx","flexGrow","background","width","borderBottom","borderColor","TabIndicatorProps","style","backgroundColor","onChange","event","newValue","variant","scrollButtons","allowScrollButtonsMobile","className","label","component","RouterNavLink","to","p"],"sourceRoot":""}